How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed blocks of code highlighting the diffences,if any.
    This was still tedious process.

How could having easy access to the entire history of a file make you a more efficient 
programmer in the long term?
	
	There won't be any need for explicitly saving multiple copies of the same file
	Hence reducing redundancy.

What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does?
	
	Pros - explicitly define logically diffrent commits to prevent unnecessary redundant
	copies.

	Cons - chances of human error and loss of previous version.

Why do you think some version control systems, like Git, allow saving multiple files in 
one commit, while others, like Google Docs, treat each file separately?

	Git is a version control working on a repository of inter-related files and folders.
	It can be project, application project, etc.
	Google docs is used to view independent files instead.

How can you use the commands git log and git diff to view the history of files?
	
	First give the git log and scroll through the various git commits
	Then use the git diff commmand along with the respective commit IDs to 
	compare and find the additions and deletions made between those two commits.

How might using version control make you more confident to make changes that could break 
something?

	Easy track through log, comparissions through git diff and traversals through various
	commits using git checkout make it really stress free to make changes to a repository 
	without the fear of loss or corruption of previous work.

Now that you have your workspace set up, what do you want to try using Git for?
	
	Use it for project development.